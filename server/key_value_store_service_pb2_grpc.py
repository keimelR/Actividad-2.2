# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import key_value_store_service_pb2 as key__value__store__service__pb2

GRPC_GENERATED_VERSION = '1.72.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in key_value_store_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class KeyValueStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Set = channel.unary_unary(
                '/key_value_store.KeyValueStore/Set',
                request_serializer=key__value__store__service__pb2.SetKeyValue.SerializeToString,
                response_deserializer=key__value__store__service__pb2.SetKeyValueResponse.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/key_value_store.KeyValueStore/Get',
                request_serializer=key__value__store__service__pb2.GetValue.SerializeToString,
                response_deserializer=key__value__store__service__pb2.GetValueResponse.FromString,
                _registered_method=True)
        self.GetPrefixKey = channel.unary_unary(
                '/key_value_store.KeyValueStore/GetPrefixKey',
                request_serializer=key__value__store__service__pb2.GetPrefix.SerializeToString,
                response_deserializer=key__value__store__service__pb2.GetPrefixResponse.FromString,
                _registered_method=True)
        self.Stat = channel.unary_unary(
                '/key_value_store.KeyValueStore/Stat',
                request_serializer=key__value__store__service__pb2.StatRequest.SerializeToString,
                response_deserializer=key__value__store__service__pb2.StatResponse.FromString,
                _registered_method=True)


class KeyValueStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Set(self, request, context):
        """Establece el valor de la clave dada
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Devuelve el valor de la clave dada
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrefixKey(self, request, context):
        """Devuelve una lista de valores cuyas claves empiezan por prefixKey.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyValueStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=key__value__store__service__pb2.SetKeyValue.FromString,
                    response_serializer=key__value__store__service__pb2.SetKeyValueResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=key__value__store__service__pb2.GetValue.FromString,
                    response_serializer=key__value__store__service__pb2.GetValueResponse.SerializeToString,
            ),
            'GetPrefixKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrefixKey,
                    request_deserializer=key__value__store__service__pb2.GetPrefix.FromString,
                    response_serializer=key__value__store__service__pb2.GetPrefixResponse.SerializeToString,
            ),
            'Stat': grpc.unary_unary_rpc_method_handler(
                    servicer.Stat,
                    request_deserializer=key__value__store__service__pb2.StatRequest.FromString,
                    response_serializer=key__value__store__service__pb2.StatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'key_value_store.KeyValueStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('key_value_store.KeyValueStore', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KeyValueStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/key_value_store.KeyValueStore/Set',
            key__value__store__service__pb2.SetKeyValue.SerializeToString,
            key__value__store__service__pb2.SetKeyValueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/key_value_store.KeyValueStore/Get',
            key__value__store__service__pb2.GetValue.SerializeToString,
            key__value__store__service__pb2.GetValueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPrefixKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/key_value_store.KeyValueStore/GetPrefixKey',
            key__value__store__service__pb2.GetPrefix.SerializeToString,
            key__value__store__service__pb2.GetPrefixResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Stat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/key_value_store.KeyValueStore/Stat',
            key__value__store__service__pb2.StatRequest.SerializeToString,
            key__value__store__service__pb2.StatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
